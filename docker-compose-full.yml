services:
  db:
    image: postgres:15-alpine
    container_name: mefeed_db_full
    environment:
      POSTGRES_DB: mefeed
      POSTGRES_USER: mefeed_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: mefeed_redis_full
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mefeed_backend_full
    depends_on:
      - db
      - redis
    secrets:
      - db_password
      - redis_password
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://mefeed_user:$(cat /run/secrets/db_password)@db:5432/mefeed
      - REDIS_URL=redis://:$(cat /run/secrets/redis_password)@redis:6379
      - JWT_PRIVATE_KEY_PATH=./secrets/jwt_private.pem
      - JWT_PUBLIC_KEY_PATH=./secrets/jwt_public.pem
      - ENCRYPTION_KEY_PATH=./secrets/encryption.key
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:3002
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - DEBUG=true
    volumes:
      - ./backend:/app:ro
      - ./secrets:/app/secrets:ro
    networks:
      - app-network
    restart: unless-stopped

secrets:
  db_password:
    file: ./secrets/db_password.txt
  redis_password:
    file: ./secrets/redis_password.txt

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
